syntax = "proto3";

package acourse;

service UserService {
  rpc GetUser(UserIDRequest) returns (User) {}
  rpc GetUsers(UserIDsRequest) returns (UsersResponse) {}
  rpc GetMe(Empty) returns (GetMeResponse) {}
  rpc UpdateMe(User) returns (Empty) {}
  rpc GetRole(UserIDRequest) returns (Role) {}
}

service EmailService {
  rpc Send(Email) returns (Empty) {}
}

service PaymentService {
  rpc ListWaitingPayments(ListRequest) returns (PaymentsResponse) {}
  rpc ListHistoryPayments(ListRequest) returns (PaymentsResponse) {}
  rpc ApprovePayments(PaymentIDsRequest) returns (Empty) {}
  rpc RejectPayments(PaymentIDsRequest) returns (Empty) {}
  rpc UpdatePrice(PaymentUpdatePriceRequest) returns (Empty) {}
  rpc FindPayment(PaymentFindRequest) returns (Payment) {}
  rpc CreatePayment(Payment) returns (Empty) {}
}

service CourseService {
  rpc ListCourses(ListRequest) returns (CoursesResponse) {}
  rpc ListPublicCourses(ListRequest) returns (CoursesResponse) {}
  rpc ListOwnCourses(UserIDRequest) returns (CoursesResponse) {}
  rpc ListEnrolledCourses(UserIDRequest) returns (CoursesResponse) {}
  rpc GetCourse(CourseIDRequest) returns (CourseResponse) {}
  rpc GetCourses(CourseIDsRequest) returns (CoursesResponse) {}
  rpc CreateCourse(Course) returns (Course) {}
  rpc UpdateCourse(Course) returns (Empty) {}
  rpc EnrollCourse(EnrollRequest) returns (Empty) {}
  rpc AttendCourse(CourseIDRequest) returns (Empty) {}
  rpc OpenAttend(CourseIDRequest) returns (Empty) {}
  rpc CloseAttend(CourseIDRequest) returns (Empty) {}
  rpc CreateEnrolls(EnrollsRequest) returns (Empty) {}
  rpc FindEnroll(EnrollFindRequest) returns (Enroll) {}
}

service AssignmentService {
  rpc CreateAssignment(Assignment) returns (Assignment) {}
  rpc UpdateAssignment(Assignment) returns (Empty) {}
  rpc OpenAssignment(AssignmentIDRequest) returns (Empty) {}
  rpc CloseAssignment(AssignmentIDRequest) returns (Empty) {}
  rpc ListAssignments(CourseIDRequest) returns (AssignmentsResponse) {}
  rpc DeleteAssignment(AssignmentIDRequest) returns (Empty) {}
  rpc SubmitUserAssignment(UserAssignment) returns (UserAssignment) {}
  rpc DeleteUserAssignment(UserAssignmentIDRequest) returns (Empty) {}
  rpc GetUserAssignments(AssignmentIDsRequest) returns (UserAssignmentsResponse) {}
  rpc ListUserAssignments(CourseIDRequest) returns (UserAssignmentsResponse) {}
}

message UserIDRequest {
  string userId = 1;
}

message UserIDsRequest {
  repeated string userIds = 1;
}

message UsersResponse {
  repeated User users = 1;
}

message GetMeResponse {
  User user = 1;
  Role role = 2;
}

message ListRequest {
  int32 offset = 1;
  int32 limit = 2;
}

message PaymentsResponse {
  repeated Payment payments = 1;
  repeated User users = 2;
  repeated CourseTiny courses = 3;
}

message PaymentIDsRequest {
  repeated string paymentIds = 1;
}

message PaymentUpdatePriceRequest {
  string paymentId = 1;
  double price = 2;
}

message CoursesResponse {
  repeated CourseSmall courses = 1;
  repeated User users = 2;
  repeated EnrollCount enrollCounts = 3;
}

message CourseIDRequest {
  string courseId = 1;
}

message CourseIDsRequest {
  repeated string courseIds = 1;
}

message EnrollRequest {
  string courseId = 1;
  string url = 2;
  string code = 3;
  double price = 4;
}

message CourseResponse {
  Course course = 1;
  User user = 2;
  bool enrolled = 3;
  bool owned = 4;
  bool purchase = 5;
  bool attended = 6;
}

message Empty {}

message User {
  string id = 1;
  string username = 2;
  string name = 3;
  string photo = 4;
  string aboutMe = 5;
}

message Role {
  bool admin = 1;
  bool instructor = 2;
}

message Email {
  reserved 3; // maybe for content type ?
  repeated string to = 1;
  string subject = 2;
  string body = 4;
}

message Course {
  message Content {
    string title = 1;
    string description = 2;
    string video = 3;
    string downloadURL = 4;
  }
  message Option {
    bool public = 1;
    bool enroll = 2;
    bool attend = 3;
    bool assignment = 4;
    bool discount = 5;
  }
  string id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string title = 4;
  string shortDescription = 5;
  string description = 6;
  string photo = 7;
  string owner = 8;
  string start = 9;
  string url = 10;
  string type = 11;
  string video = 12;
  double price = 13;
  double discountedPrice = 14;
  Option options = 15;
  repeated Content contents = 16;
  string enrollDetail = 17;
}

message CourseSmall {
  message Option {
    bool discount = 5;
  }
  string id = 1;
  string title = 4;
  string shortDescription = 5;
  string photo = 7;
  string owner = 8;
  string start = 9;
  string url = 10;
  string type = 11;
  double price = 13;
  double discountedPrice = 14;
  Option options = 15;
}

message CourseTiny {
  string id = 1;
  string title = 2;
}

message Payment {
  string id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string userId = 4;
  string courseId = 5;
  double originalPrice = 6;
  double price = 7;
  string code = 8;
  string url = 9;
  string status = 10;
  string at = 11;
}

message PaymentFindRequest {
  string userId = 1;
  string courseId = 2;
  string status = 3;
}

message EnrollCount {
  string courseId = 1;
  int32 count = 2;
}

message Assignment {
  string id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string courseId = 4;
  string title = 5;
  string description = 6;
  bool open = 7;
}

message AssignmentIDRequest {
  string assignmentId = 1;
}

message AssignmentIDsRequest {
  repeated string assignmentIds = 1;
}

message AssignmentsResponse {
  repeated Assignment assignments = 1;
}

message UserAssignment {
  string id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string assignmentId = 4;
  string userId = 5;
  string url = 6;
}

message UserAssignmentsResponse {
  repeated UserAssignment userAssignments = 1;
}

message UserAssignmentIDRequest {
  string userAssignmentId = 1;
}

message Enroll {
  string UserID = 1;
  string CourseID = 2;
}

message EnrollsRequest {
  repeated Enroll enrolls = 1;
}

message EnrollFindRequest {
  string userId = 1;
  string courseId = 2;
}
