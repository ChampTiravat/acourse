{
  "rules": {
    ".read": false,
    ".write": false,
    "user": { // global user data
      ".read": true,
      "$user_id": {
        ".write": "auth.uid === $user_id",
        "name": {
          ".validate": "newData.isString()"
        },
        "photo": {
          ".validate": "newData.isString()"
        },
        "aboutMe": {
          ".validate": "newData.isString()"
        },
        "course": {
          "$course_id": {
            ".validate": "newData.val() === true"
          }
        }
      }
    },
    "instructor": {
      ".read": true,
      ".write": false
    },
    "course": { // course data
      ".read": true, // everyone can read
      ".indexOn": ["owner", "timestamp"],
      "$course_id": { // only owner can write
        ".write": "(!data.exists() || auth.uid === data.child('owner').val()) && (root.child('instructor/' + auth.uid).val() === true)",
        "title": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "photo": {
          ".validate": "newData.isString()"
        },
        "owner": {
          ".validate": "newData.val() === auth.uid"
        },
        "timestamp": {
          ".validate": "newData.val() <= now"
        },
        "favorite": {
          "$user_id": {
            ".write": "auth.uid === $user_id",
            ".validate": "newData.val() === true"
          }
        },
        "student": {
          "$user_id": {
            ".write": "auth.uid === $user_id",
            ".validate": "newData.val() === true"
          }
        }
      }
    },
    "chat": {
      "$course_id": {
        ".read": true
      }
    }
  }
}
