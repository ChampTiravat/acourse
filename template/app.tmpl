{{define "body"}}
  <div id="navbar" class="navbar-color">
    <div class="navbar-container grid-container">
      <a href="/">
        <img class="logo" src="/~/img/acourse-logo-w-2.svg" height="45">
      </a>
      <div class="_flex-row _flex-span _main-end">
      {{if me}}
        <!--<p>{{me.Username}}</p>-->
        <a class="link _flex-row _cross-center _font-sub" href="/profile">Profile</a>
        {{if me.Role.Admin}}
          <a class="link _flex-row _cross-center _font-sub" href="/admin/users">Users</a>
          <a class="link _flex-row _cross-center _font-sub" href="/admin/courses">Courses</a>
          <a class="link _flex-row _cross-center _font-sub" href="/admin/payments/pending">Pending Payments</a>
          <a class="link _flex-row _cross-center _font-sub" href="/admin/payments/history">History Payments</a>
        {{end}}
        <a class="link _flex-row _cross-center _font-sub" href="/signout">Sign Out</a>
      {{else}}
        <a class="link _flex-row _cross-center _font-sub" href="/signin">Sign In</a>
        <a href="/signup"><div class="acourse-button -primary _font-sub">Register</div></a>
      {{end}}
      </div>
    </div>
  </div>

  <div class="app-container _bg-color-base">
    {{template "app-body" $}}
  </div>

  <footer>
    Made with <span>❤️</span>&nbsp;&nbsp;by
    <a href="https://moonrhythm.info" target="_blank">Moon Rhythm</a>
  </footer>
{{end}}

{{define "script"}}
  <script>
    // Navbar scroll event
    ;(() => {
      let didScroll
      let lastScrollTop = 0
      let delta = 5
      let navbarHeight = $('#navbar').outerHeight()

      $(window).scroll(() => {
        didScroll = true
      })

      const hasScrolled = () => {
        const st = $(this).scrollTop()

        if (Math.abs(lastScrollTop - st) <= delta) return

        if (st > lastScrollTop && st > navbarHeight) {
          $('#navbar').removeClass('nav-down').addClass('nav-up')
        } else {
          if (st + $(window).height() < $(document).height()) {
            $('#navbar').removeClass('nav-up').addClass('nav-down')
          }
        }
        lastScrollTop = st
      }

      setInterval(() => {
        if (didScroll) {
          hasScrolled()
          didScroll = false
        }
      }, 250)
    })()

    function bindFileInputImage (input, img) {
      input.onchange = () => {
        const fp = input.files && input.files[0]
        if (fp) {
          const reader = new FileReader()
          reader.onload = (e) => {
            img.src = e.target.result
          }
          reader.readAsDataURL(fp)
        }
      }
    }
  </script>
  {{template "app-script" $}}
{{end}}


{{define "style"}}
  {{template "app-style" $}}
  <style>
    footer {
      position: relative;
      z-index: 2;
      padding: 32px;
      backface-visibility: hidden;
      background-color: #292d35;
      color: #484d56;
    }
    .app-container {
      padding-top: 80px;
    }
    #navbar {
      position: fixed;
      z-index: 100;
      width: 100%;
      top: 0;
      background-color: white;
      transition: top 0.2s ease-in-out;
      border-bottom: 1px solid #e7eef1;
    }
    #navbar .link {
      color: #474f57;
      text-decoration: none;
      padding: 0 16px;
    }
    #navbar.nav-up {
      top: -82px;
    }
    #navbar > .navbar-container {
      position: relative;
      display: flex;
      justify-content: space-between;
      align-items: center;
      height: 80px;
    }
    #navbar .acourse-button {
      flex-basis: 100px;
    }
  </style>
{{end}}

